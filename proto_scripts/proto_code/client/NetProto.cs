// Code generated by gen_proto.sh.
// DO NOT EDIT!
using UnityEngine;
using System;
using System.Collections.Generic;

namespace NetProto.Proto
{
    public abstract class NetBase
    {
        public short NetMsgId;
        public abstract void Pack(ByteArray w);
    }

    public class null_struct : NetBase
    { 

        public override void Pack(ByteArray w)
        { 
        }

        public static null_struct UnPack(ByteArray reader)
        {
            null_struct tbl = new null_struct();

            return tbl;
        }
    }

    public class byte_id : NetBase
    { 
        public byte id;

        public override void Pack(ByteArray w)
        { 
            w.WriteUnsignedInt8(this.id);
        }

        public static byte_id UnPack(ByteArray reader)
        {
            byte_id tbl = new byte_id();
            tbl.id = reader.ReadUnsignedInt8();

            return tbl;
        }
    }

    public class auto_id : NetBase
    { 
        public Int32 id;

        public override void Pack(ByteArray w)
        { 
            w.WriteInt32(this.id);
        }

        public static auto_id UnPack(ByteArray reader)
        {
            auto_id tbl = new auto_id();
            tbl.id = reader.ReadInt32();

            return tbl;
        }
    }

    public class entity_id : NetBase
    { 
        public string id;

        public override void Pack(ByteArray w)
        { 
            w.WriteUTF(this.id);
        }

        public static entity_id UnPack(ByteArray reader)
        {
            entity_id tbl = new entity_id();
            tbl.id = reader.ReadUTFBytes();

            return tbl;
        }
    }

    public class item_id : NetBase
    { 
        public UInt32 id;

        public override void Pack(ByteArray w)
        { 
            w.WriteUnsignedInt(this.id);
        }

        public static item_id UnPack(ByteArray reader)
        {
            item_id tbl = new item_id();
            tbl.id = reader.ReadUnsignedInt32();

            return tbl;
        }
    }

    public class player_cards : NetBase
    { 
        public string[] player_1;
        public string[] player_2;
        public string[] plyaer_3;
        public string[] hole_cards;
        public string roomId;

        public override void Pack(ByteArray w)
        { 
            w.WriteUnsignedInt16((UInt16)this.player_1.Length);
            for (int k = 0; k < this.player_1.Length; k++)
            { 
                w.WriteUTF(this.player_1[k]);
            }
            w.WriteUnsignedInt16((UInt16)this.player_2.Length);
            for (int k = 0; k < this.player_2.Length; k++)
            { 
                w.WriteUTF(this.player_2[k]);
            }
            w.WriteUnsignedInt16((UInt16)this.plyaer_3.Length);
            for (int k = 0; k < this.plyaer_3.Length; k++)
            { 
                w.WriteUTF(this.plyaer_3[k]);
            }
            w.WriteUnsignedInt16((UInt16)this.hole_cards.Length);
            for (int k = 0; k < this.hole_cards.Length; k++)
            { 
                w.WriteUTF(this.hole_cards[k]);
            }
            w.WriteUTF(this.roomId);
        }

        public static player_cards UnPack(ByteArray reader)
        {
            player_cards tbl = new player_cards();
            {
                UInt16 narr = reader.ReadUnsignedInt16();
                
                tbl.player_1 = new string[narr];
                
                for (int i = 0; i < narr; i++)
                {
                    tbl.player_1[i] = reader.ReadUTFBytes();
                }
            }
            {
                UInt16 narr = reader.ReadUnsignedInt16();
                
                tbl.player_2 = new string[narr];
                
                for (int i = 0; i < narr; i++)
                {
                    tbl.player_2[i] = reader.ReadUTFBytes();
                }
            }
            {
                UInt16 narr = reader.ReadUnsignedInt16();
                
                tbl.plyaer_3 = new string[narr];
                
                for (int i = 0; i < narr; i++)
                {
                    tbl.plyaer_3[i] = reader.ReadUTFBytes();
                }
            }
            {
                UInt16 narr = reader.ReadUnsignedInt16();
                
                tbl.hole_cards = new string[narr];
                
                for (int i = 0; i < narr; i++)
                {
                    tbl.hole_cards[i] = reader.ReadUTFBytes();
                }
            }
            tbl.roomId = reader.ReadUTFBytes();

            return tbl;
        }
    }
}
