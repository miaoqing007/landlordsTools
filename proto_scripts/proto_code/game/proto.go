// Code generated by gen_proto.sh.
// DO NOT EDIT!
package client_proto

import "app/misc/packet"
import "fmt"
import "strings"

type S_null_struct struct {
}

func (p S_null_struct) Pack(w *packet.Packet) {
}

func PKT_null_struct(reader *packet.Packet) (tbl S_null_struct, err error) {

	return
}

type S_byte_id struct {
	F_id uint8
}

func (p S_byte_id) Pack(w *packet.Packet) {
	w.WriteByte(p.F_id)
}

func PKT_byte_id(reader *packet.Packet) (tbl S_byte_id, err error) {
	tbl.F_id, err = reader.ReadByte()
	checkErr(err)

	return
}

type S_auto_id struct {
	F_id int32
}

func (p S_auto_id) Pack(w *packet.Packet) {
	w.WriteS32(p.F_id)
}

func PKT_auto_id(reader *packet.Packet) (tbl S_auto_id, err error) {
	tbl.F_id, err = reader.ReadS32()
	checkErr(err)

	return
}

type S_entity_id struct {
	F_id uint64
}

func (p S_entity_id) Pack(w *packet.Packet) {
	w.WriteU64(p.F_id)
}

func PKT_entity_id(reader *packet.Packet) (tbl S_entity_id, err error) {
	tbl.F_id, err = reader.ReadU64()
	checkErr(err)

	return
}

type S_item_id struct {
	F_id uint32
}

func (p S_item_id) Pack(w *packet.Packet) {
	w.WriteU32(p.F_id)
}

func PKT_item_id(reader *packet.Packet) (tbl S_item_id, err error) {
	tbl.F_id, err = reader.ReadU32()
	checkErr(err)

	return
}

func checkErr(err error) {
	if err != nil {
		panic("error occured in protocol module")
	}
}

func checkMax(path string, v float64, max float64) {
	if v > max {
		s := fmt.Sprintf("error range in %s, v=%g, max=%g", path, v, max)
		panic(s)
	}
}

func checkMin(path string, v float64, min float64) {
	if v < min {
		s := fmt.Sprintf("error range in %s, v=%g, min=%g", path, v, min)
		panic(s)
	}
}
